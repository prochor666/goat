#!/usr/bin/env php

<?php
echo "ðŸš€ Running tests.. \n\n";

function scanTargetDirHelper ($dir, $indent = 2) {
    $buffer = '';
    $ls = scandir($dir);

    foreach ($ls as $fsObject) {
        
        if ($fsObject !== '.' && $fsObject !== '..') {
            $isDir = is_dir($dir . "/" . $fsObject);
            $icon = $isDir ? "ðŸ“‚ ": "ðŸ—Ž ";
            $buffer .= str_repeat(" ", $indent) . $icon . $fsObject . "\n";
            if ($isDir) {
                $buffer .= scanTargetDirHelper($dir . "/" . $fsObject, $indent + $indent);
            }
        }
    }

    return $buffer;
}

$output = null;
$returnCode = 0;
$phpUnitDir = "./vendor/bin";
$GoatCoreTestsDir = "./src/GoatCore/TestSuite";

echo "ðŸ’¾ PHPUnit location: " . $phpUnitDir . "\n";

echo "ðŸ’¾ Tests target location: $GoatCoreTestsDir \n";
echo "ðŸ’¿ Scan: \n";
echo scanTargetDirHelper($GoatCoreTestsDir);
echo "\n";

exec(str_replace("/", DIRECTORY_SEPARATOR, $phpUnitDir) . DIRECTORY_SEPARATOR . "phpunit --testdox --verbose src\GoatCore\TestSuite\Tests", $output, $returnCode);

if ($returnCode !== 0) {
  // Show full output
  echo PHP_EOL . implode(PHP_EOL, $output) . PHP_EOL;
  echo "! Aborting commit.." . PHP_EOL;
  exit(1);
}

// Show summary (last line)
echo "ðŸ“Ÿ Output RAW (unit tests) \n";
foreach ($output as $row) {
    echo $row . "\n";
}
echo "ðŸ“Ÿ EOF";

exit(0);

